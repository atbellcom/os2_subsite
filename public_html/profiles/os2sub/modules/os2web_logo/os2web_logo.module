<?php

/**
 * @file
 * Render logo of site section.
 *
 * Setup configuration of logo image from site structure term depends on
 * current path and provide variable to render in page template.
 */

/**
 * Implements hook_block_info().
 */
function os2web_logo_block_info() {
  $blocks['os2web_logo'] = array(
    'info' => t('OS2Web Logo'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function os2web_logo_block_configure($delta = '') {
  $form = array();
  if ($delta == 'os2web_logo') {
    $os2web_logo_config = variable_get('os2web_logo_paths', []);
    $vocabulary = taxonomy_vocabulary_machine_name_load('os2web_base_tax_site_structure');
    $terms = entity_load('taxonomy_term', FALSE, ['vid' => $vocabulary->vid]);
    $options = ['' => t('All')];
    foreach ($terms as $term) {
      $options[$term->tid] = $term->name;
      $form['os2web_logo_paths' . $term->tid] = array(
        '#type' => 'fieldset',
        '#title' => $term->name,
        '#collapsible' => TRUE,
        '#collapsed' => empty($os2web_logo_config[$term->tid]),
        'term-' . $term->tid => array(
          '#type' => 'textarea',
          '#title' => t('Specify paths set for section'),
          '#default_value' => !empty($os2web_logo_config[$term->tid]) ? $os2web_logo_config[$term->tid] : '',
        )
      );
    }

    $form['os2web_logo_default_tid'] = [
      '#type' => 'select',
      '#title' => t('Select default term for section logo'),
      '#options' => $options,
      '#default_value' => variable_get('os2web_logo_default_tid'),
    ];

    $form['os2web_logo_imagestyle'] = [
      '#type' => 'textfield',
      '#required' => TRUE,
      '#title' => t('Machine name of imagestyle'),
      '#default_value' => variable_get('os2web_logo_imagestyle'),
    ];
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function os2web_logo_block_save($delta = '', $edit = array()) {

  if ($delta == 'os2web_logo') {
    $os2web_logo_config = [];
    foreach ($edit as $key => $value) {
      $key_parts = explode('-', $key);
      if ($key_parts[0] == 'term') {
        $os2web_logo_config[$key_parts[1]] = $value;
      }
    }
    variable_set('os2web_logo_paths', $os2web_logo_config);
    variable_set('os2web_logo_default_tid', $edit['os2web_logo_default_tid']);
    variable_set('os2web_logo_imagestyle', $edit['os2web_logo_imagestyle']);
  }
}

/**
 * Implements hook_block_view().
 */
function os2web_logo_block_view($delta = '') {
  $block = array();
  if ($delta != 'os2web_logo') {
    return;
  }

  $section_logo_image = os2web_logo_get_path();
  $section_logo_imagestyle = variable_get('os2web_logo_imagestyle');
  // Render section logo image.
  if (!empty($section_logo_image['uri']) && !empty($section_logo_imagestyle)) {
    $block['content'] = theme('image_style', array(
      'style_name' => $section_logo_imagestyle,
      'path' => $section_logo_image['uri'],
    ));
  }

  return $block;
}

function os2web_logo_get_path() {
  $section_logo_tid = variable_get('os2web_logo_default_tid');
  $os2web_logo_paths = variable_get('os2web_logo_paths', array());
  if (empty($os2web_logo_paths)) {
    return FALSE;
  }

  foreach ($os2web_logo_paths as $tid => $paths) {
    if (empty($paths)) {
      continue;
    }

    // Convert path to lowercase. This allows comparison of the same path
    // with different case. Ex: /Page, /page, /PAGE.
    $pages = drupal_strtolower($paths);
    // Convert the Drupal path to lowercase.
    $path = drupal_strtolower(drupal_get_path_alias($_GET['q']));
    // Compare the lowercase internal and lowercase path alias (if any).
    $page_match = drupal_match_path($path, $pages);
    if ($path != $_GET['q']) {
      $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
    }

    if (!$page_match) {
      continue;
    }

    $section_logo_tid = $tid;
    break;
  }

  if (empty($section_logo_tid)) {
    return FALSE;
  }

  $term = taxonomy_term_load($section_logo_tid);
  $logo_field_value = field_get_items('taxonomy_term', $term, 'field_os2web_base_field_logo');
  if (empty($logo_field_value[0])) {
    return FALSE;
  }

  return $logo_field_value[0];
}
